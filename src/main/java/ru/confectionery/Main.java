package ru.confectionery;

import javax.swing.SwingUtilities;
import ru.confectionery.ui.MainFrame;

public class Main {
    public static void main(String[] args) {
        /**
         * ИНСТРУКЦИЯ ПО ЗАПУСКУ И ИСПОЛЬЗОВАНИЮ СИСТЕМЫ
         * 
         * 1. Установка необходимого ПО:
         *    - Установите Docker с официального сайта: https://www.docker.com/
         *    - Установите JDK 11 или выше: https://adoptium.net/
         *    - Установите Gradle: https://gradle.org/install/
         * 
         * 2. Настройка и запуск MongoDB кластера:
         *    a) Создайте директорию проекта и скопируйте в нее файлы:
         *       - docker-compose.yml
         *       - init-replicaset.js
         *    
         *    b) Запустите MongoDB кластер:
         *       > docker-compose up -d
         *    
         *    c) Проверьте, что все контейнеры запущены:
         *       > docker ps
         *       Должны быть видны 3 контейнера: mongo1, mongo2, mongo3
         *    
         *    d) Инициализируйте replica set:
         *       > docker exec -it mongo1 mongosh --eval "load('/scripts/init-replicaset.js')"
         *    
         *    e) Проверьте статус кластера:
         *       > docker exec -it mongo1 mongosh --eval "rs.status()"
         *       Все узлы должны быть в состоянии PRIMARY или SECONDARY
         * 
         * 3. Сборка и запуск приложения:
         *    a) В корневой директории проекта выполните:
         *       > gradle build
         *    
         *    b) Запустите приложение:
         *       > gradle run
         * 
         * 4. Использование системы:
         *    Система состоит из 5 основных разделов:
         * 
         *    a) Продукты:
         *       - Добавление/удаление продуктов
         *       - Указание названия, типа, цены, веса и описания
         *       - Поиск по названию/типу/описанию
         *       - Сортировка по любому полю
         * 
         *    b) Ингредиенты:
         *       - Управление складом ингредиентов
         *       - Учет единиц измерения и количества
         *       - Отслеживание цен на ингредиенты
         * 
         *    c) Рецепты:
         *       - Создание рецептов для продуктов
         *       - Указание необходимых ингредиентов и их количества
         *       - Добавление инструкций по производству
         * 
         *    d) Партии:
         *       - Учет произведенных партий продукции
         *       - Отслеживание сроков годности
         *       - Управление статусами партий
         * 
         *    e) Заказы:
         *       - Оформление заказов клиентов
         *       - Учет состава заказа и общей стоимости
         *       - Отслеживание статуса выполнения
         * 
         * 5. Связи в базе данных:
         *    - Один-ко-многим: Продукт -> Партии
         *    - Один-к-одному: Продукт -> Рецепт
         * 
         * 6. Особенности работы:
         *    - Все даты вводятся в формате дд.мм.гггг
         *    - Поиск не чувствителен к регистру
         *    - Сортировка доступна по всем числовым и текстовым полям
         *    - При удалении записей система запрашивает подтверждение
         *    - Все суммы указываются в рублях
         */
        
        SwingUtilities.invokeLater(() -> {
            MainFrame mainFrame = new MainFrame();
            mainFrame.setVisible(true);
        });
    }
} 